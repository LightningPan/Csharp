<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>等你归去来 - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=-oFz8B4m7JhHaZzdTkzPza2oLZNDRR8obnCz6w7OHbU" />
    <link id="MainCss" rel="stylesheet" href="/skins/codinglife/bundle-codinglife.min.css?v=hlpQ1CJDwwJXDxv2HNauUmW3NjyWzoMaw1uER19SLT0" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/yougewe/custom.css?v=P8TSMG0CFucThY7zv658b3Zxvwk=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/codinglife/bundle-codinglife-mobile.min.css?v=XjHfryC9ctsatIZz1dHn7TsRIqmwz9c3aj_6SCfHSDM" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/yougewe/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/yougewe/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/yougewe/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=uk-as-QYRHtjaAbeEigAktvhwf01NRrnle-6exg65Ak"></script>
    <script>
        var currentBlogId = 251865;
        var currentBlogApp = 'yougewe';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'CodingLife';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/yougewe/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/yougewe/">等你归去来</a>
</h1>
<h2>
我约我期，要么求变，否则忍受，等你归去来！
</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/yougewe/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E7%AD%89%E4%BD%A0%E5%BD%92%E5%8E%BB%E6%9D%A5">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/yougewe/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
215&nbsp; </span>
<span id="stats_article_count">文章 - 
31&nbsp; </span>
<span id="stats-comment_count">评论 - 
294</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		
<!--done-->




		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/yougewe/archive/2020/04/19.html">2020年4月19日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/yougewe/p/12734558.html">
    Dubbo（三）：负载均衡实现解析
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：dubbo作为分布式远程调用框架，要保证的点很多，比如：服务注册与发现、故障转移、高性能通信、负载均衡等等！ 负载均衡的目的是为了特定场景下，能够将请求合理地平分到各服务实例上，以便发挥所有机器的叠加作用。主要考虑的点如：不要分配请求到挂掉的机器，性能越好的机器可以分配更多的请求。。。 一般负载均衡            <a href="https://www.cnblogs.com/yougewe/p/12734558.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-04-19 22:10 等你归去来 阅读 (105) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12734558" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/yougewe/archive/2020/04/06.html">2020年4月6日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/yougewe/p/12642655.html">
    Nginx（一）：启动流程解析
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：nginx作为高效的http服务器和反向代理服务器，值得我们深入了解。 我们带着几个问题，深入了解下nginx的工作原理。首先是开篇：nginx是如何启动的？ nginx是用c写的软件，github地址: https://github.com/nginx/nginx 其目录结构如下，我们主要关注 s            <a href="https://www.cnblogs.com/yougewe/p/12642655.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-04-06 16:26 等你归去来 阅读 (111) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12642655" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/yougewe/archive/2020/03/22.html">2020年3月22日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/yougewe/p/12546817.html">
    Redis（十二）：请求转发的实现
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：请求转发一般的原因为： 1. 该请求自身无法处理，需要转发给对应的服务器处理； 2. 为实现负载均衡，使用路由服务，选择目标实例进行转发； 在集群模式下，请求可以打到任何一台redis服务器上。然而并不是所有的服务器都会处理真正的请求，而是只有符合redis slot规则的实例才会处理真正的请求；             <a href="https://www.cnblogs.com/yougewe/p/12546817.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-03-22 16:38 等你归去来 阅读 (386) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12546817" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/yougewe/archive/2020/03/11.html">2020年3月11日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/yougewe/p/12460685.html">
    深入理解JDBC设计模式: DriverManager 解析
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：JDBC 是java中的一个数据连接技术，它提供了统一的 API 允许用户访问任何形式的表格数据，尤其是存储在关系数据库中的数据。 虽然目前JDBC已经基本被隐藏在了许多数据库框架之后，但是其底层原理从未变过。所以，多一点了解JDBC还是有意义的。 JDBC 之所以能提供统一的API，是基于对所有数            <a href="https://www.cnblogs.com/yougewe/p/12460685.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-03-11 11:08 等你归去来 阅读 (217) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12460685" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/yougewe/archive/2020/03/08.html">2020年3月8日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/yougewe/p/12444375.html">
    Redis（十一）：哨兵模式架构设计分析
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：业务最初的应用场景中，我们也许使用单机redis就可以应付业务要求，但并非一直可行。 比如单机的读写能力问题，单机的可用性问题，单机的数据安全性问题。这些都是许多互联网应用经常会遇到的问题，也基本上都有一套理论去解决它，只是百花齐放。 哨兵是Redis中解决高可用问题的解决方案之一，我们就一起来看看            <a href="https://www.cnblogs.com/yougewe/p/12444375.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-03-08 19:35 等你归去来 阅读 (306) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12444375" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/yougewe/archive/2020/02/23.html">2020年2月23日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/yougewe/p/12349899.html">
    Redis（十）：pub/sub 发布订阅源码解析
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：谈到发布订阅模式，相信不会陌生，典型的观察者模式的实现。然而从表面来看，本地实现一个wait/notify通知、register/update调用, 实现一个远程mq服务, 还有本文说的 pub/sub, 其实道理都差不多。只是，同样的需求，针对不同的环境，实现上往往是有天壤之别的。 所以，我们就来            <a href="https://www.cnblogs.com/yougewe/p/12349899.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-02-23 15:09 等你归去来 阅读 (258) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12349899" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/yougewe/archive/2020/02/18.html">2020年2月18日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/yougewe/p/12325367.html">
    Redis（九）：主从复制的设计与实现解析
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前面几篇我们已经完全理解了redis的基本功能的实现了。 但单靠基本功能实现，往往还是称不上优秀的项目的。毕竟，我们现在面对的都是复杂的环境，高并发的场景，大数据量的可能。 简而言之，现在的系统一般都需要支持分布式部署，不存在单点问题，才算是一个合格的系统。 而redis作为一个存储系统，单点问题肯            <a href="https://www.cnblogs.com/yougewe/p/12325367.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-02-18 11:26 等你归去来 阅读 (236) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12325367" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/yougewe/archive/2020/02/05.html">2020年2月5日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/yougewe/p/12267274.html">
    线程池技术之：ThreadPoolExecutor 源码解析
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：java中的所说的线程池，一般都是围绕着 ThreadPoolExecutor 来展开的。其他的实现基本都是基于它，或者模仿它的。所以只要理解 ThreadPoolExecutor, 就相当于完全理解了线程池的精髓。 其实要理解一个东西，一般地，我们最好是要抱着自己的疑问或者理解去的。否则，往往收获            <a href="https://www.cnblogs.com/yougewe/p/12267274.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-02-05 23:25 等你归去来 阅读 (194) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12267274" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/yougewe/archive/2020/02/02.html">2020年2月2日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/yougewe/p/12253982.html">
    Redis（八）：zset/zadd/zrange/zrembyscore 命令源码解析
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前面几篇文章，我们完全领略了redis的string,hash,list,set数据类型的实现方法，相信对redis已经不再神秘。 本篇我们将介绍redis的最后一种数据类型: zset 的相关实现。 本篇过后，我们对redis的各种基础功能，应该不会再有疑惑。有可能的话，我们后续将会对redis的            <a href="https://www.cnblogs.com/yougewe/p/12253982.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-02-02 22:08 等你归去来 阅读 (343) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12253982" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/yougewe/archive/2020/02/01.html">2020年2月1日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/yougewe/p/12247580.html">
    Redis（七）：set/sadd/sismember/sinter/sdiffstore 命令源码解析
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：上两篇我们讲了hash和list数据类型相关的主要实现方法，同时加上前面对框架服务和string相关的功能介绍，已揭开了大部分redis的实用面纱。 现在还剩下两种数据类型: set, zset. 本篇咱们继续来看redis中的数据类型的实现: set 相关操作实现。 研究过jdk的hashmap和            <a href="https://www.cnblogs.com/yougewe/p/12247580.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-02-01 09:32 等你归去来 阅读 (185) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12247580" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>



<div class="topicListFooter">
    <div id="nav_next_page">
        
    <a href="https://www.cnblogs.com/yougewe/default.html?page=2">
        下一页
    </a>

    </div>    
</div>








	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 等你归去来
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    <div id="page_end_html">
        <script language="javascript" type="text/javascript">
// 生成目录索引列表
// ref: http://www.cnblogs.com/wangqiguo/p/4355032.html
// modified by: zzq
function GenerateContentList()
{
    var mainContent = $('#cnblogs_post_body');
	var h2_ele = 'h3';
	var h3_ele = 'h4';
    var h2_list = $('#cnblogs_post_body ' + h2_ele);//如果你的章节标题不是h2,只需要将这里的h2换掉即可
 
    if(mainContent.length < 1)
        return;
  
    if(h2_list.length>0)
    {
        var content = '<a name="_labelTop"></a>';
        content += '<div id="navCategory" style="color:#152e97;">';
        content += '<p style="font-size:18px;"><b>目录</b></p>';
        content += '<ul>';
        for(var i=0; i<h2_list.length; i++)
        {
            var go_to_top = '<div style="text-align: right;"><a href="#_labelTop" style="color:#f68a33">返回顶部</a><a name="_label' + i + '"></a></div>';
            $(h2_list[i]).before(go_to_top);
             
            var h3_list = $(h2_list[i]).nextAll(h3_ele);
            var li3_content = '';
            for(var j=0; j<h3_list.length; j++)
            {
                var tmp = $(h3_list[j]).prevAll(h2_ele).first();
                if(!tmp.is(h2_list[i]))
                    break;
                var li3_anchor = '<a name="_label' + i + '_' + j + '"></a>';
                $(h3_list[j]).before(li3_anchor);
                li3_content += '<li><a href="#_label' + i + '_' + j + '">' + $(h3_list[j]).text() + '</a></li>';
            }
             
            var li2_content = '';
            if(li3_content.length > 0)
                li2_content = '<li><a href="#_label' + i + '">' + $(h2_list[i]).text() + '</a><ul>' + li3_content + '</ul></li>';
            else
                li2_content = '<li><a href="#_label' + i + '">' + $(h2_list[i]).text() + '</a></li>';
            content += li2_content;
        }
        content += '</ul>';
        content += '</div><p> </p>';
        content += '<hr style="height:1px;border:none;border-top:1px dashed #0066CC;"/>';
        if($('#cnblogs_post_body').length != 0 )
        {
            $($('#cnblogs_post_body')[0]).prepend(content);
        }
    }  
}
 
GenerateContentList();
</script>
    </div>
</body>
</html>