<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="never" />
    <meta property="og:description" content="哈希表华山论剑 比特宇宙编程语言联合委员会准备举办一次大会，主题为 哈希表 ，给各大编程语言帝国都发去了邀请函。 很快就到了大会这一天 联合委员会秘书长开场发言：“诸位，为促进技术交流与发展，增强各帝" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>哈希表哪家强？几大编程语言吵起来了！ - 轩辕之风 - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=Z9Vw4btcgJmrpUEjY_SgebmTmDXJ_hPFoST7ad2aJp4" />
    <link id="MainCss" rel="stylesheet" href="/skins/codinglife/bundle-codinglife.min.css?v=hlpQ1CJDwwJXDxv2HNauUmW3NjyWzoMaw1uER19SLT0" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/xuanyuan/custom.css?v=1KFqgc8N4u9cFrFdaEZzuOblzkw=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/codinglife/bundle-codinglife-mobile.min.css?v=XjHfryC9ctsatIZz1dHn7TsRIqmwz9c3aj_6SCfHSDM" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/xuanyuan/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/xuanyuan/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/xuanyuan/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=98Fvfd6UZH20B_MF08daNaODjSu879MVR9RHmyvWAlg"></script>
    <script>
        var currentBlogId = 193695;
        var currentBlogApp = 'xuanyuan';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'CodingLife';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    <div id="page_begin_html">
        <script>loadPageBeginHtml();</script>
    </div>
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/xuanyuan/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/xuanyuan/">轩辕之风</a>
</h1>
<h2>

</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/xuanyuan/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E8%BD%A9%E8%BE%95%E4%B9%8B%E9%A3%8E">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/xuanyuan/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
42&nbsp; </span>
<span id="stats_article_count">文章 - 
0&nbsp; </span>
<span id="stats-comment_count">评论 - 
220</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/xuanyuan/p/12776866.html">哈希表哪家强？几大编程语言吵起来了！</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
    <h2 id="哈希表华山论剑">哈希表华山论剑</h2>
<p>比特宇宙编程语言联合委员会准备举办一次大会，主题为<strong>哈希表</strong>，给各大编程语言帝国都发去了邀请函。</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/6c7363f0-66c9-4447-bbd5-f694ca3d821e.jpeg" alt=""></p>
<p>很快就到了大会这一天</p>
<p>联合委员会秘书长开场发言：“诸位，为促进技术交流与发展，增强各帝国友谊，联合委员会特设此盛会，感谢诸位的捧场”</p>
<p>会场传来一阵鼓掌声······</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/58c5d6a0-863d-4377-b70b-c89f01798d2c.png" alt=""></p>
<p>秘书长继续发言：“本次大会的主题是<strong>哈希表</strong>，人类程序员使用最多的数据容器之一，各大编程语言帝国相信都有实现。今天的大会就围绕哈希表分为几个议题讨论，首先是第一个议题：<strong>存储结构与冲突解决</strong>”</p>
<h2 id="存储结构与冲突解决">存储结构与冲突解决</h2>
<p>来自GoLang帝国的<code>map</code>率先发言：“哈希表，哈希表，首先得是个表嘛，所以最基本的要用一个数组来存储，数组中的每一个元素叫做<code>bucket</code>。至于hash冲突嘛，就用链表来解决嘛”</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/b0c1ca64-ff9f-4a9c-8dea-be5229d7ba26.png" alt=""></p>
<p>GoLang帝国的map说完，有人站了起来：“英雄所见略同！在下C++帝国的<code>unordered_map</code>，我们基本上也是选择的这种方法”</p>
<p>此时，Python帝国的代表提出了质疑：“链表确实可以解决冲突，不过嘛，这要是冲突太多，链表太长，搜寻起来岂不费时？”</p>
<p>GoLang帝国的map和C++帝国的unordered_map面面相觑，不知如何应对。</p>
<p>“链表太长的话，那就转成树结构！”，就在这时，又有人站了起来。</p>
<p>见有人起身，Python帝国代表转身问道：“在下乃Python帝国的字典<code>dict{}</code>，敢问阁下怎么称呼”</p>
<p>“我是Java帝国的<code>HashMap</code>，和前面两位兄台的策略大体相同，只是在冲突过多，具体来说链表长度超过8的时候就转换成红黑树的结构，以此加快查找”</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/6eff814d-04dc-4962-9d9b-9b00b13af6a2.png" alt=""></p>
<p>说完，map、unordered_map松了一口气，和HashMap一起坐下了。</p>
<p>dict{}继续发问：“在座的都是这个思路，用链表解决冲突？”</p>
<p>说完，另外一位代表站了起来，“等等，我们C#帝国的<code>HashTable</code>就没用链表！”</p>
<p>dict{}露出了满意的表情，“那你们是怎么解决冲突的呢？”</p>
<p>“咱HashTable内部使用的是双重散列法，咱内部不止一种哈希计算方式，一次Hash冲突，咱就换一个再算，直到找到有空位的地方存储”，HashTable回答到。</p>
<p>dict{}看起来有些失望，估计这也不是他所用的方式。</p>
<p>“你问了半天，还没说你们Python是怎么处理冲突的呢？”，Java帝国的HashMap开口了。</p>
<p>“是啊，是啊”，其他代表也跟着起哄。</p>
<p>见众人起哄，dict{}只好应答：“链表法固然不错，不过需要在插入数据过程中动态分配内存构建链表节点，开销不小，我们没有采用。”</p>
<p>“那到底用了啥，你倒是说啊，快急死我了”，C++的unordered_map有些急了。</p>
<p>“我们用的是一种叫<strong>开放寻址法</strong>的策略，如果发现了冲突，就按照制定的策略从这个位置往后找，直到找到有空的位置存储”，dict{}继续说到。</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/fbd5949e-997f-49c2-864a-ad010660f78d.png" alt=""></p>
<p>“哪有那么简单的事，你把别人的位置占了，那对应那个位置的数据来了怎么办？还有查找怎么找？删除怎么处理？这不全乱套了吗”，unordered_map追问不舍。</p>
<p>“是这样的，按照我们既定的规则，在查找的时候就需要额外做一些工作，另外删除的时候也不能直接删除，否则会破坏规则链条·····”，接下来一段时间，dict{}给大家仔细介绍了他们的处理思路。</p>
<p>“你这个也太麻烦了，不如我们链表法来的清晰明了”</p>
<p>“这怎么就麻烦了？这好处不显而易见嘛？”，dict{}也不甘示弱。</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/080d1324-855d-40d8-ab15-ea8257acbedd.png" alt=""></p>
<p>这时，秘书长打断了大家的争辩：“诸位，诸位，静一静，静一静，咱们这个议题到此为止，进入下一个议题：<strong>哈希到位置映射</strong>”</p>
<h2 id="哈希到位置映射">哈希到位置映射</h2>
<p>急性子的C++帝国代表<code>unordered_map</code>第一个说话：“这有什么好讨论的，不就是用hash值对哈希表数组长度进行一个求模运算吗？”</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/f1fc7ac6-8d33-4e39-992c-94a3750551f0.png" alt=""></p>
<p>“就是，这有什么好讨论的”，C#帝国的<code>HashTable</code>也附和到。</p>
<p>“哎，此言差矣，我就没用取模运算”，众人望去，这Python帝国的dict{}又要闹什么新鲜玩意。</p>
<p>GoLang帝国的<code>map</code>问道：“老哥用的什么办法，别卖关子了，快说来听听”</p>
<p>dict{}扫了众人一眼说到，“我的办法就是：”</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/c25ef07f-7068-4292-a02b-fa4e969170ea.png" alt=""></p>
<p>这是怎么个映射法？众代表皆摸不着头脑，议论纷纷，唯有Java帝国的<code>HashMap</code>听闻微微一笑。</p>
<p>dict{}见状问道：“HashMap兄台，莫非知晓其中玄机？”</p>
<p>只见HashMap不紧不慢的站了起来说到：“哈希表长度是2的幂次，减1之后的二进制均变成了1，比如长度16，减1变成15，也就是二进制1111。再进行与运算，相当于取了哈希值的低位，直接映射到对应的数组位置，与运算比取模运算要快不少。不瞒诸位，我HashMap中也是使用的这种方式，此乃雕虫小技，不值得炫耀”</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/a713f1e8-f7e8-48d8-9c61-d8602c0f97e0.png" alt=""></p>
<p>众代表听完纷纷点头称赞，dict{}不知何时却已坐下。</p>
<p>C#的<code>HashTable</code>问道：“这样直接取低几位，会不会造成Hash值到数组到映射不均匀，拿你举的例子来说，18的二进制是0001 0010，34的二进制是0010 0010，他们的低4位都一样，和1111与上以后都是0010，也就是都该存到数组的2号位，这岂不是一定程度上的增加了冲突的概率吗？”</p>
<p>突如其来的质疑并没有让HashMap慌乱，反而是从容不迫的解释到：“C#代表的这个问题提的非常好，不知dict{}兄台是如何处理的。我们的方案是在进行与运算映射之前，对hash值进行一个处理，具体来说就是将其高16位与低16位进行一个异或运算，如此一来，最终参与与运算的部分就融合了原始hash的全部信息，而不仅仅是低位。”</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/a626987b-4a4a-4d64-af48-707f230d5132.png" alt=""></p>
<p>众代表听完再次点头称赞。</p>
<p>秘书长打破了平静，“看来大家收获都颇丰，咱们接着下一个话题吧：<strong>初始容量与扩容</strong>”</p>
<h2 id="初始容量与扩容">初始容量与扩容</h2>
<p>众代表这一次皆不争先，互相观望。</p>
<p>秘书长见状说到：“没人主动，那我可就要点名了······”</p>
<p>“那就我先吧”，Java帝国的<code>HashMap</code>站了起来，“我的默认初始容量是16，有一个叫<strong>负载因子</strong>的参数，默认是0.75。我的策略是，如果内部数组的空间使用了超过75%，那就要准备扩容了，否则后续Hash冲突的概率就会很大。哦对了，扩容时容量得是2的指数次方，原因前面已经交代了”</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/4a4dd8b5-ede4-4232-98d6-e0364998c0bb.png" alt=""></p>
<p><code>dict{}</code>第二个起身：“嗯，差不多，我的默认初始容量是8，扩容的时候也是要求是2的指数次方，另外我的负载因子是2/3，扩容时机比这位HashMap老哥更早一些”</p>
<p>C#帝国代表<code>HashTable</code>听闻也起身发言：“我的初始容量是3，至于负载因子嘛，我经过大量实验测试，得出的数据在两位之间，是0.72。容量大小方面我就没有2的指数次方的要求了，而是要求一个<strong>素数</strong>。之所以要求素数的原因，是因为我使用的求模运算进行的映射，使用素数的话，冲突会少一些。”</p>
<p>这时，C++帝国代表<code>unordered_map</code>也说话了，“巧了！我也是素数哎，你看，我提前把容量都算好存起来了，到时候扩容就挨个取就行了。”</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/7bbc147c-ef14-412f-bd6f-63c36460eb01.png" alt=""></p>
<h2 id="尾声">尾声</h2>
<p>时间过的很快，在大家热情的讨论中，一上午时间很快就结束了。</p>
<p>大会临近尾声，秘书长致辞宣布：“感谢各位代表积极探讨，大会取得圆满成功，本次大会到此结束，咱们下次再会！”</p>
<p>会场再次传来一阵热烈的鼓掌声······</p>
<p>然而就在此时，会场外突然传来一个声音：“举办如此盛会，怎能少了我”</p>
<p>众人望去，皆叹：“他果然还是来了”</p>
<h2 id="彩蛋">彩蛋</h2>
<blockquote>
<p>会后，C#帝国代表拉住了C++帝国代表</p>
<p>“兄弟，八卦一下，你这取的是个啥名，你看我和Java帝国的代表都叫<strong>Hashxxx</strong>，你咋不也叫<strong>hash_map</strong>或者<strong>hash_table</strong>之类的名字呢？叫什么<strong>unordered_map</strong>”</p>
<p>“哎，兄台你有所不知，其实我也不想叫这名字，只是，，，这话说来话长了······”，unordered_map叹了口气。</p>
</blockquote>
<h2 id="往期热门回顾">往期热门回顾</h2>
<p><a href="https://mp.weixin.qq.com/s/v6nc9aIBY_R1S6ToPzj5Qg">内核地址空间大冒险4:线程切换</a></p>
<p><a href="https://mp.weixin.qq.com/s/XrtH9-Eo7pzJu-Fzt89voQ">震撼！全网第一张源码分析全景图揭秘Nginx</a></p>
<p><a href="https://mp.weixin.qq.com/s/gZPxqZzY2rnngxvvzexWTw">一个整数＋1引发的灾难</a></p>
<p><a href="https://mp.weixin.qq.com/s/V7wBdl-5W4ehTAnACQFjGQ">一网打尽！每个程序猿都该了解的黑客技术大汇总</a></p>
<p><a href="https://mp.weixin.qq.com/s/Bb2ugXYPR6r11QaGKbNBSw">看过无数Java GC文章，这5个问题你也未必知道！</a></p>
<p><a href="https://mp.weixin.qq.com/s/xp2S4_3UQTZ0TOIlVqM8uw">一个Java对象的回忆录：垃圾回收</a></p>
<p><a href="https://mp.weixin.qq.com/s/lxpHhHVIh6DktoHzrRLaKA">谁动了你的HTTPS流量？</a></p>
<p><a href="https://mp.weixin.qq.com/s/7gM31s4-hTJTprJnxsHgEA">路由器里的广告秘密</a></p>
<p><a href="https://mp.weixin.qq.com/s/JTr1-5nPtseAYXfvJdamVg">DDoS攻击：无限战争</a></p>
<p><a href="https://mp.weixin.qq.com/s/lerhjpAEdp4RiwsmetyqPg">一条SQL注入引出的惊天大案</a></p>
<p><a href="https://mp.weixin.qq.com/s/suzicCzb2g5b8NN71S5Ngw">一个HTTP数据包的奇幻之旅</a></p>
<p><a href="https://mp.weixin.qq.com/s/_TOFIPGIeMHhVxIVToxmiQ">一个DNS数据包的惊险之旅</a></p>
<p><a href="https://mp.weixin.qq.com/s/-ggUa3aWkjjHjr9VwQL9TQ">我是一个流氓软件线程</a></p>
<h3 id="扫码关注，更多精彩"><center>扫码关注，更多精彩</center></h3>
<hr>
<p><img src="https://imgkr.cn-bj.ufileos.com/5de7751a-9e38-4718-994a-6136f7804ae5.png" alt=""></p>

</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2020-04-26 09:08</span>&nbsp;
<a href="https://www.cnblogs.com/xuanyuan/">轩辕之风</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12776866" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(12776866);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 193695, cb_blogApp = 'xuanyuan', cb_blogUserGuid = '8508cac9-f21a-e411-8d02-90b11c0b17d6';
    var cb_entryId = 12776866, cb_entryCreatedDate = '2020-04-26 09:08', cb_postType = 1; 
    loadViewCount(cb_entryId);
    loadSideColumnAd();
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;">
            <script>
                if (new Date() >= new Date(2018, 9, 13)) {
                    googletag.cmd.push(function () { googletag.display("div-gpt-ad-1539008685004-0"); });
                }
            </script>
        </div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 轩辕之风
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>