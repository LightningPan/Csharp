<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="never" />
    <meta property="og:description" content="ApiPost V3引入了预执行脚本和后执行脚本的概念，详细可以通过链接：《ApiPost的预执行脚本和后执行脚本》了解学习更多。本文主要介绍如何在预执行脚本里增加请求参数。" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>ApiPost如何在预执行脚本里添加请求参数？ - phpWeChat开发教程 - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=Z9Vw4btcgJmrpUEjY_SgebmTmDXJ_hPFoST7ad2aJp4" />
    <link id="MainCss" rel="stylesheet" href="/skins/simplememory/bundle-simplememory.min.css?v=OL4qeo1LNGlN1rKIhv5UctANvt0M6Nx6kLzr_ffx3Xk" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/SimpleMemory/bundle-SimpleMemory-mobile.min.css" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/phpwechat/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/phpwechat/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/phpwechat/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=98Fvfd6UZH20B_MF08daNaODjSu879MVR9RHmyvWAlg"></script>
    <script>
        var currentBlogId = 325015;
        var currentBlogApp = 'phpwechat';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'SimpleMemory';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    <div id="page_begin_html">
        <div style="width: 1000px; margin: 8px auto">
<a href="https://www.apipost.cn/" target="_blank">可直接生成文档的API调试、管理工具</a>
</div>
    </div>
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/phpwechat/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/phpwechat/">phpWeChat教程</a>
</h1>
<h2>
教你10天学会phpWechat，快速开发PC网站+微信公共号
</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/phpwechat/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/phpWeChat%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/phpwechat/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
61&nbsp; </span>
<span id="stats_article_count">文章 - 
0&nbsp; </span>
<span id="stats-comment_count">评论 - 
4</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/phpwechat/p/12797560.html">ApiPost如何在预执行脚本里添加请求参数？</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                
    <div id="cnblogs_post_description" style="display: none">
        ApiPost V3引入了预执行脚本和后执行脚本的概念，详细可以通过链接：《ApiPost的预执行脚本和后执行脚本》了解学习更多。本文主要介绍如何在预执行脚本里增加请求参数。
    </div>
<div id="cnblogs_post_body" class="blogpost-body ">
    <p>ApiPost V3引入了预执行脚本和后执行脚本的概念，详细可以通过链接：《<a href="https://www.cnblogs.com/phpwechat/p/12797553.html" target="_blank">ApiPost的预执行脚本和后执行脚本</a>》了解学习更多。本文主要介绍如何在预执行脚本里增加请求参数。</p>
<h3>使用场景</h3>
<p>我们可能需要在请求时发送一些参数，而这些参数是通过其他参与发送的请求参数计算而来的。举例：</p>
<p>接口：https://console.apipost.cn/need_token.php</p>
<p>body请求参数如下：</p>
<table style="width: 100%;" border="0" cellspacing="0" cellpadding="0">
<tbody>
<tr><th>参数</th><th>参数描述&nbsp;</th></tr>
<tr>
<td>&nbsp;user_id</td>
<td>&nbsp;用户ID</td>
</tr>
<tr>
<td>&nbsp;nick_name</td>
<td>&nbsp;用户名</td>
</tr>
</tbody>
</table>
<p><br />header请求参数如下：</p>
<p>
</p>
<table style="width: 100%;" border="0" cellspacing="0" cellpadding="0">
<tbody>
<tr><th>参数</th><th>参数描述&nbsp;</th></tr>
<tr>
<td>&nbsp;token</td>
<td>&nbsp;由body的请求参数user_id、nick_name和用户头UA通过md5 加密后组成&nbsp;</td>

</tr>

</tbody>
</table>
<pre><code class="hljs nginx"><span class="hljs-attribute">&nbsp;</span></code></pre>
<p>如上面的情况，我们需要在发送前，先通过body的请求参数user_id、nick_name和用户头UA通过md5 加密计算得出一个token放到header里才行。ApiPost如何实现这个需求呢？</p>
<p>我们可以通过在预执行脚本里增加请求参数来实现。</p>
<h3>具体实现</h3>
<p>如下图，我们已经在body里添加好了我们需要的参数。</p>
<p><img src="https://img.cdn.apipost.cn/image/article/c3355bf9fe5586a5cf649ec8d3d05c7d.png" alt=""></p>
<p>我们接下来要做的是通过预执行脚本计算出token并添加到header参数。</p>
<p>我们先做个小实验，先在预执行脚本里定义一个临时变量raw_token，其值由&nbsp;</p>
<blockquote>request.request_bodys.user_id + request.request_bodys.nick_name + navigator.userAgent</blockquote>
<p>组成。其实后面就会讲到，request就是请求参数对象，navigator就是用户环境浏览器对象。</p>
<p><img src="https://img.cdn.apipost.cn/image/article/844c83b5b574a7b0293f902df9d86a8a.png" alt=""></p>
<p>然后把这个变量放到get里，目的是看看服务器到底会不会接收到我们目标中由user_id、nick_name、UA组成的字符串。发送结果如下：</p>
<p><img src="https://img.cdn.apipost.cn/image/article/6881a793c4ca03a0afaa3711c7a85f2a.png" alt=""></p>
<p>成功！我们通过在服务器端打印的结果来看，这个参数就是我们发送的body参数加上UA组成的字符串。</p>
<p>那么接下来就好办了，我们只需要把这个变量md5后放到header参数里就行了。</p>
<p><img src="https://img.cdn.apipost.cn/image/article/282bb80762a7db29ef45095170aa6a0d.png" alt=""></p>
<p>并在发送后，服务器成功接收header参数token：</p>
<p><img src="https://img.cdn.apipost.cn/image/article/4a8041e809abbda19e4ecf7f1e9f15d6.png" alt=""></p>
<h3>request 对象</h3>
<p>如同上面所说，我们可以在预执行脚本里，通过 request 对象来获得请求的参数数据。该对象结构如下：</p>
<pre><code class="hljs objectivec">{
&nbsp; &nbsp; <span class="hljs-string">"url": <span class="hljs-string">"https://console.apipost.cn/need_token.php",&nbsp; <span class="hljs-comment">// 字符串，请求URL
&nbsp; &nbsp; <span class="hljs-string">"method": <span class="hljs-string">"POST",&nbsp; &nbsp; <span class="hljs-comment">// 字符串，请求方式
&nbsp; &nbsp; <span class="hljs-string">"timeout": <span class="hljs-number">25000,&nbsp; &nbsp; <span class="hljs-comment">// 数字，请求超时时间限制（毫秒）
&nbsp; &nbsp; <span class="hljs-string">"contentType": <span class="hljs-string">"application/x-www-form-urlencoded", <span class="hljs-comment">//字符串，请求contentType
&nbsp; &nbsp; <span class="hljs-string">"request_bodys": { <span class="hljs-comment">// 对象，预定义请求Body参数
&nbsp; &nbsp; &nbsp; &nbsp; <span class="hljs-string">"user_id": <span class="hljs-string">"1",
&nbsp; &nbsp; &nbsp; &nbsp; <span class="hljs-string">"nick_name": <span class="hljs-string">"jim green"
&nbsp; &nbsp; },
&nbsp; &nbsp; <span class="hljs-string">"request_headers": { <span class="hljs-comment">// 对象，预定义请求Header参数
&nbsp; &nbsp; &nbsp; &nbsp; <span class="hljs-string">"Authorization": <span class="hljs-string">"Basic amltOnB3ZDEyMw=="
&nbsp; &nbsp; }
}<br /></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
<h3>navigator对象</h3>
<p>Navigator 对象包含有关浏览器的信息，同正常浏览器的Navigator&nbsp; 对象属性相同。</p>
</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2020-04-28 21:55</span>&nbsp;
<a href="https://www.cnblogs.com/phpwechat/">phpWeChat开发教程</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12797560" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(12797560);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 325015, cb_blogApp = 'phpwechat', cb_blogUserGuid = 'be81a4a9-0ecc-e611-845c-ac853d9f53ac';
    var cb_entryId = 12797560, cb_entryCreatedDate = '2020-04-28 21:55', cb_postType = 1; 
    loadViewCount(cb_entryId);
    loadSideColumnAd();
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;">
            <script>
                if (new Date() >= new Date(2018, 9, 13)) {
                    googletag.cmd.push(function () { googletag.display("div-gpt-ad-1539008685004-0"); });
                }
            </script>
        </div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 phpWeChat开发教程
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    <div id="page_end_html">
        <div style="width: 1000px; margin: 8px auto">
<a href="https://www.apipost.cn/" target="_blank">可直接生成文档的API调试、管理工具</a>
</div>
    </div>
</body>
</html>